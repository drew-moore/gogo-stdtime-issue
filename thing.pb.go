// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: thing.proto

/*
Package timestamps is a generated protocol buffer package.

It is generated from these files:
	thing.proto

It has these top-level messages:
	Thing
*/
package main

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/gogo/protobuf/gogoproto"

import time "time"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Thing struct {
	Created *time.Time `protobuf:"bytes,1,opt,name=created,stdtime" json:"created,omitempty"`
}

func (m *Thing) Reset()                    { *m = Thing{} }
func (m *Thing) String() string            { return proto.CompactTextString(m) }
func (*Thing) ProtoMessage()               {}
func (*Thing) Descriptor() ([]byte, []int) { return fileDescriptorThing, []int{0} }

func (m *Thing) GetCreated() *time.Time {
	if m != nil {
		return m.Created
	}
	return nil
}

func init() {
	proto.RegisterType((*Thing)(nil), "uplevel.Thing")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ThingService service

type ThingServiceClient interface {
	GetThing(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*Thing, error)
}

type thingServiceClient struct {
	cc *grpc.ClientConn
}

func NewThingServiceClient(cc *grpc.ClientConn) ThingServiceClient {
	return &thingServiceClient{cc}
}

func (c *thingServiceClient) GetThing(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*Thing, error) {
	out := new(Thing)
	err := grpc.Invoke(ctx, "/uplevel.ThingService/getThing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ThingService service

type ThingServiceServer interface {
	GetThing(context.Context, *google_protobuf1.Empty) (*Thing, error)
}

func RegisterThingServiceServer(s *grpc.Server, srv ThingServiceServer) {
	s.RegisterService(&_ThingService_serviceDesc, srv)
}

func _ThingService_GetThing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThingServiceServer).GetThing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/uplevel.ThingService/GetThing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThingServiceServer).GetThing(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ThingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "uplevel.ThingService",
	HandlerType: (*ThingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getThing",
			Handler:    _ThingService_GetThing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "thing.proto",
}

func init() { proto.RegisterFile("thing.proto", fileDescriptorThing) }

var fileDescriptorThing = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xc9, 0xc8, 0xcc,
	0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x2d, 0xc8, 0x49, 0x2d, 0x4b, 0xcd,
	0x91, 0x92, 0x4f, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x0b, 0x27, 0x95, 0xa6, 0xe9, 0x97,
	0x64, 0xe6, 0xa6, 0x16, 0x97, 0x24, 0xe6, 0x16, 0x40, 0x54, 0x4a, 0x49, 0xa3, 0x2b, 0x48, 0xcd,
	0x2d, 0x28, 0xa9, 0x84, 0x4a, 0x8a, 0xa4, 0xe7, 0xa7, 0xe7, 0x83, 0x99, 0xfa, 0x20, 0x16, 0x44,
	0x54, 0xc9, 0x99, 0x8b, 0x35, 0x04, 0x64, 0x97, 0x90, 0x15, 0x17, 0x7b, 0x72, 0x51, 0x6a, 0x62,
	0x49, 0x6a, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0xb7, 0x91, 0x94, 0x1e, 0xc4, 0x34, 0x3d, 0x98,
	0x69, 0x7a, 0x21, 0x30, 0xeb, 0x9c, 0x58, 0x26, 0xdc, 0x97, 0x67, 0x0c, 0x82, 0x69, 0x30, 0x72,
	0xe1, 0xe2, 0x01, 0x1b, 0x12, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xc2, 0xc5, 0x91,
	0x9e, 0x5a, 0x02, 0x31, 0x57, 0x0c, 0xc3, 0x18, 0x57, 0x90, 0xa3, 0xa4, 0xf8, 0xf4, 0xa0, 0xde,
	0xd2, 0x03, 0xab, 0x53, 0x62, 0x70, 0xd2, 0x8a, 0xd2, 0x48, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2,
	0x4b, 0xce, 0xcf, 0xd5, 0x87, 0xca, 0xea, 0x96, 0xa4, 0x26, 0x67, 0xe4, 0xe5, 0xe7, 0xe4, 0xa7,
	0x57, 0x22, 0xbc, 0x5b, 0x9c, 0xc4, 0x06, 0x36, 0xcd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x4e,
	0x77, 0x57, 0x3d, 0x29, 0x01, 0x00, 0x00,
}
